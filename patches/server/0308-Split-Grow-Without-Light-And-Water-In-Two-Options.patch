From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ibramsou <kasobanboui@gmail.com>
Date: Fri, 12 Apr 2024 09:13:34 +0200
Subject: [PATCH] Split Grow Without Light And Water In Two Options


diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 4ba15dac85c77058a23ab49543e91c0d9a8cca3f..2b8e13f13c2b30b03ef84904ce0af5301e848061 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -212,16 +212,27 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
 
     // Skylodia Start
 
-    private boolean growWithoutLightAndWater;
+    private boolean growWithoutLight;
+    private boolean growWithoutWater;
 
     @Override
-    public boolean isGrowWithoutLightAndWater() {
-        return this.growWithoutLightAndWater;
+    public boolean isGrowWithoutLight() {
+        return this.growWithoutLight;
     }
 
     @Override
-    public void setGrowWithoutLightAndWater(final boolean growWithoutLightAndWater) {
-        this.growWithoutLightAndWater = growWithoutLightAndWater;
+    public void setGrowWithoutLight(final boolean growWithoutLight) {
+        this.growWithoutLight = growWithoutLight;
+    }
+
+    @Override
+    public boolean isGrowWithoutWater() {
+        return this.growWithoutWater;
+    }
+
+    @Override
+    public void setGrowWithoutWater(final boolean growWithoutWater) {
+        this.growWithoutWater = growWithoutWater;
     }
 
     // Skylodia End
diff --git a/src/main/java/net/minecraft/world/level/LevelReader.java b/src/main/java/net/minecraft/world/level/LevelReader.java
index d0252ab52324528c4d8443e3f6305a6a8c4ef719..18a29d9cce2901d86c8eae08142b62182d02c5a7 100644
--- a/src/main/java/net/minecraft/world/level/LevelReader.java
+++ b/src/main/java/net/minecraft/world/level/LevelReader.java
@@ -239,10 +239,16 @@ public interface LevelReader extends BlockAndTintGetter, CollisionGetter, Signal
     }
 
     // Skylodia Start
-    default boolean isGrowWithoutLightAndWater() {
+    default boolean isGrowWithoutLight() {
         return false;
     }
 
-    default void setGrowWithoutLightAndWater(boolean growWithoutLightAndWater) {}
+    default void setGrowWithoutLight(boolean growWithoutLight) {}
+
+    default boolean isGrowWithoutWater() {
+        return false;
+    }
+
+    default void setGrowWithoutWater(boolean growWithoutWater) {}
     // Skylodia End
 }
diff --git a/src/main/java/net/minecraft/world/level/block/CropBlock.java b/src/main/java/net/minecraft/world/level/block/CropBlock.java
index 9d03a475029e1e8584dcb176b47f8e6cc1968ef9..0ec23f178d59957d28d8c8ac0117985a2fb19c55 100644
--- a/src/main/java/net/minecraft/world/level/block/CropBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/CropBlock.java
@@ -77,7 +77,7 @@ public class CropBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.isGrowWithoutLightAndWater() || world.getRawBrightness(pos, 0) >= 9) {
+        if (world.isGrowWithoutLight() || world.getRawBrightness(pos, 0) >= 9) {
             int i = this.getAge(state);
 
             if (i < this.getMaxAge()) {
@@ -173,7 +173,7 @@ public class CropBlock extends BushBlock implements BonemealableBlock {
     }
 
     protected static boolean hasSufficientLight(LevelReader world, BlockPos pos) {
-        return world.isGrowWithoutLightAndWater() || world.getRawBrightness(pos, 0) >= 8;
+        return world.isGrowWithoutLight() || world.getRawBrightness(pos, 0) >= 8;
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/block/FarmBlock.java b/src/main/java/net/minecraft/world/level/block/FarmBlock.java
index 9f2c811e737c452bace8a88f96ff963cca1c02e7..d178e22547fd190d8b4de96eb2806d6a3ea96fc9 100644
--- a/src/main/java/net/minecraft/world/level/block/FarmBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/FarmBlock.java
@@ -95,7 +95,7 @@ public class FarmBlock extends Block {
         if (i > 0 && world.paperConfig().tickRates.wetFarmland != 1 && (world.paperConfig().tickRates.wetFarmland < 1 || (net.minecraft.server.MinecraftServer.currentTick + pos.hashCode()) % world.paperConfig().tickRates.wetFarmland != 0)) { return; } // Paper - Configurable random tick rates for blocks
         if (i == 0 && world.paperConfig().tickRates.dryFarmland != 1 && (world.paperConfig().tickRates.dryFarmland < 1 || (net.minecraft.server.MinecraftServer.currentTick + pos.hashCode()) % world.paperConfig().tickRates.dryFarmland != 0)) { return; } // Paper - Configurable random tick rates for blocks
 
-        if (!world.isGrowWithoutLightAndWater() && !FarmBlock.isNearWater(world, pos) && !world.isRainingAt(pos.above())) { // Skylodia
+        if (!world.isGrowWithoutWater() && !FarmBlock.isNearWater(world, pos) && !world.isRainingAt(pos.above())) { // Skylodia
             if (i > 0) {
                 org.bukkit.craftbukkit.event.CraftEventFactory.handleMoistureChangeEvent(world, pos, (BlockState) state.setValue(FarmBlock.MOISTURE, i - 1), 2); // CraftBukkit
             } else if (!FarmBlock.shouldMaintainFarmland(world, pos)) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index b36ce904107744edda666a76339a14805e397082..49595fd9c65ba12aeba82cc5bd79144adadfece4 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -2446,13 +2446,23 @@ public class CraftWorld extends CraftRegionAccessor implements World {
     }
 
     @Override
-    public boolean isGrowWithoutLightAndWater() {
-        return this.getHandle().isGrowWithoutLightAndWater();
+    public boolean isGrowWithoutLight() {
+        return this.getHandle().isGrowWithoutLight();
     }
 
     @Override
-    public void setGrowWithoutLightAndWater(final boolean growWithoutLightAndWater) {
-        this.getHandle().setGrowWithoutLightAndWater(growWithoutLightAndWater);
+    public void setGrowWithoutLight(final boolean growWithoutLight) {
+        this.getHandle().setGrowWithoutLight(growWithoutLight);
+    }
+
+    @Override
+    public boolean isGrowWithoutWater() {
+        return this.getHandle().isGrowWithoutWater();
+    }
+
+    @Override
+    public void setGrowWithoutWater(final boolean growWithoutWater) {
+        this.getHandle().setGrowWithoutWater(growWithoutWater);
     }
 
     private List<GeneratedStructure> getStructures(int x, int z, Predicate<net.minecraft.world.level.levelgen.structure.Structure> predicate) {
